var CaasU;(()=>{"use strict";var e={d:(t,a)=>{for(var s in a)e.o(a,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:a[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{CaasUserManagementClient:()=>a});class a{constructor(e){this.currentUser=null,this.currentProject=null,this.currentHub=null,this.demoMode=!1,this.useDirectFetch=!1,this.useStreaming=!0,this.serveraddress=e}getCurrentUser(){return this.currentUser}getCurrentHub(){return this.currentHub}getCurrentProject(){return this.currentProject}getUseDirectFetch(){return this.useDirectFetch}getUseStreaming(){return this.useStreaming}getDemoMode(){return this.demoMode}getUploadURL(){return this.serveraddress+"/caas_um_api/upload"}getUploadArrayURL(){return this.serveraddress+"/caas_um_api/uploadArray"}async getConfiguration(){let e=await fetch(this.serveraddress+"/caas_um_api/configuration",{credentials:"include"}),t=await e.json();this.useDirectFetch=t.useDirectFetch,this.useStreaming=t.useStreaming,this.demoMode=t.demoMode}async checkLogin(){let e=await fetch(this.serveraddress+"/caas_um_api/checklogin",{credentials:"include"}),t=await e.json();return!!t.succeeded&&(this.currentUser=t.user,t.hub?t.project?(this.currentHub=t.hub,this.currentProject=t.project):(this.currentHub=t.hub,this.currentProject=null):(this.currentProject=null,this.currentHub=null),!0)}async logout(){await fetch(this.serveraddress+"/caas_um_api/logout/",{credentials:"include",method:"PUT"})}async register(e){let t=JSON.stringify({firstName:e.firstName,lastName:e.lastName,email:e.email,password:e.password}),a=await fetch(this.serveraddress+"/caas_um_api/register/",{body:t,credentials:"include",method:"POST",headers:{"Content-type":"application/json; charset=UTF-8"}});return a=await a.json(),a.ERROR?a.ERROR:"SUCCESS"}async login(e,t){let a=await fetch(this.serveraddress+"/caas_um_api/login/"+e+"/"+t,{credentials:"include",method:"PUT"});return a=await a.json(),a.ERROR||(this.currentUser=a.user),a}async leaveHub(){await fetch(this.serveraddress+"/caas_um_api/hub/none",{credentials:"include",method:"PUT"}),this.currentProject=null,this.currentHub=null}async getHubs(){let e=await fetch(this.serveraddress+"/caas_um_api/hubs",{credentials:"include"});return await e.json()}async renameHub(e,t){await fetch(this.serveraddress+"/caas_um_api/renameHub/"+e+"/"+t,{credentials:"include",method:"PUT"})}async createHub(e){let t=await fetch(this.serveraddress+"/caas_um_api/newhub/"+e,{credentials:"include",method:"PUT"});return await t.json()}async loadHub(e){let t=await fetch(this.serveraddress+"/caas_um_api/hub/"+e,{credentials:"include",method:"PUT"}),a=await t.json();this.currentHub=a}async getHubUsers(e){let t=await fetch(this.serveraddress+"/caas_um_api/hubusers/"+e,{credentials:"include"});return await t.json()}async addHubUser(e,t,a){await fetch(this.serveraddress+"/caas_um_api/addHubUser/"+e+"/"+t+"/"+a,{credentials:"include",method:"PUT"})}async updateHubUser(e,t,a){await fetch(this.serveraddress+"/caas_um_api/updateHubUser/"+e+"/"+t+"/"+a,{credentials:"include",method:"PUT"})}async deleteHubUser(e,t){await fetch(this.serveraddress+"/caas_um_api/deleteHubUser/"+e+"/"+t,{credentials:"include",method:"PUT"})}async deleteHub(e){await fetch(this.serveraddress+"/caas_um_api/deleteHub/"+e,{credentials:"include",method:"PUT"})}async acceptHub(e,t){await fetch(this.serveraddress+"/caas_um_api/acceptHub/"+e+"/"+t,{credentials:"include",method:"PUT"}),this.refreshHubTable()}async leaveProject(){await fetch(this.serveraddress+"/caas_um_api/project/none",{credentials:"include",method:"PUT"}),this.currentProject=null}async renameProject(e,t){await fetch(this.serveraddress+"/caas_um_api/renameproject/"+e+"/"+t,{credentials:"include",method:"PUT"})}async createProject(e,t){let a=await fetch(this.serveraddress+"/caas_um_api/newproject/"+e+"/"+t,{credentials:"include",method:"PUT"});return await a.json()}async deleteProject(e){await fetch(this.serveraddress+"/caas_um_api/deleteproject/"+e,{credentials:"include",method:"PUT"})}async loadProject(e){let t=await fetch(this.serveraddress+"/caas_um_api/project/"+e,{credentials:"include",method:"PUT"}),a=await t.json();this.currentProject=a}async getProjects(e){let t=await fetch(this.serveraddress+"/caas_um_api/projects/"+e,{credentials:"include"});return await t.json()}async getProjectUsers(e){let t=await fetch(this.serveraddress+"/caas_um_api/projectusers/"+e,{credentials:"include"});return await t.json()}async addProjectUser(e,t,a){await fetch(this.serveraddress+"/caas_um_api/addProjectUser/"+e+"/"+t+"/"+a,{credentials:"include",method:"PUT"})}async updateProjectUser(e,t,a){await fetch(this.serveraddress+"/caas_um_api/updateProjectUser/"+e+"/"+t+"/"+a,{credentials:"include",method:"PUT"})}async deleteProjectUser(e,t){await fetch(this.serveraddress+"/caas_um_api/deleteProjectUser/"+e+"/"+t,{credentials:"include",method:"PUT"})}async getUploadToken(e,t){let a=await fetch(this.serveraddress+"/caas_um_api/uploadToken/"+e+"/"+t,{credentials:"include"});return await a.json()}processUploadFromToken(e,t=""){fetch(this.serveraddress+"/caas_um_api/processToken/"+e,{credentials:"include",method:"PUT",headers:{startpath:t}})}async getModels(){let e=await fetch(this.serveraddress+"/caas_um_api/models",{credentials:"include"});return await e.json()}async getDownloadToken(e,t){let a=await fetch(this.serveraddress+"/caas_um_api/downloadToken/"+e+"/"+t,{credentials:"include"});return await a.json()}async getPNG(e){return await fetch(this.serveraddress+"/caas_um_api/png/"+e,{credentials:"include"})}async getSCS(e){let t=await fetch(this.serveraddress+"/caas_um_api/scs/"+e,{credentials:"include"}),a=await t.arrayBuffer();return new Uint8Array(a)}async enableStreamAccess(e){await fetch(this.serveraddress+"/caas_um_api/enableStreamAccess/"+e,{credentials:"include",method:"PUT"})}async deleteModel(e){await fetch(this.serveraddress+"/caas_um_api/deleteModel/"+e,{credentials:"include",method:"PUT"})}async initializeWebviewer(e){let t;if(this.useStreaming){let a=await fetch(this.serveraddress+"/caas_um_api/streamingSession",{credentials:"include"}),s=await a.json();t=new Communicator.WebViewer({containerId:e,endpointUri:"ws://"+s.serverurl+":"+s.port+"?token="+s.sessionid,model:"_empty",rendererType:Communicator.RendererType.Client})}else t=new Communicator.WebViewer({containerId:e,empty:!0,streamingMode:1});return t}}CaasU=t})();